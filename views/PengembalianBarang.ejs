<%- include('./partials/layoutStart.ejs') %>
<%- include('./partials/aside.ejs') %>

<div class="flex-1 bg-gray-100 p-6">
    <div class="p-1 mb-4 flex justify-between items-center">
        <div class="relative flex items-center w-full max-w-md"></div>
        <div class="flex items-center space-x-4">
            <div>
                <a href="/notifpengembalian">
                    <img src="icons/bell.png" alt="Notification Bell" class="w-6 h-6">
                </a>
            </div>
            <div class="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6 text-gray-600">
                    <path fill-rule="evenodd" d="M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z" clip-rule="evenodd" />
                </svg>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-md shadow-md p-6">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-800">Pengembalian</h2>
            <div class="flex space-x-2">

            </div>
        </div>

        <div class="overflow-x-auto rounded-lg border border-gray-200">
            <table class="min-w-full divide-y divide-gray-200" id="returnsTable">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Nama Peminjam</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Barang</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Nomor HP</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Email</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Status</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Jumlah</th>
                        <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Pilih</th>
                        </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="tabelPengembalian">
                    <% if (pengembalian && pengembalian.length > 0) { %>
                        <% pengembalian.forEach(function(item) { %>
                            <%
                                const statusClass = item.status_pengembalian === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
                                                    item.status_pengembalian === 'Dikembalikan' ? 'bg-green-100 text-green-800' :
                                                    'bg-red-100 text-red-800'; // Asumsi nilai lain berarti Terlambat/Rusak
                            %>
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800"><%= item.nama_peminjam %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800"><%= item.nama_barang %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800"><%= item.no_hp %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800"><%= item.email %></td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= statusClass %>">
                                        <%= item.status_pengembalian %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800"><%= item.jumlah_barang %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <input type="checkbox" class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500" data-id="<%= item.id %>">
                                </td>
                                </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="8" class="px-6 py-4 text-center text-sm text-gray-500">
                                Tidak ada data pengembalian ditemukan saat ini.
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <div class="flex justify-between items-center mt-6">
            <button id="prevPageBtn" class="bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-4 rounded-lg shadow-sm" style="display: none;">Sebelumnya</button>
            <span id="pageInfo" class="text-gray-600 text-sm" style="display: none;"></span>
            <button id="nextPageBtn" class="bg-[#0D1F4B] hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg shadow-sm" style="display: none;">Berikutnya</button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const returnsTable = document.getElementById('returnsTable');
        const btnPengembalianBarang = document.getElementById('btnPengembalianBarang'); // Ambil tombol "Pengembalian Barang"

        // Event listener untuk tombol hapus (jika ada di masa depan atau sudah ada tapi tidak ditunjukkan di EJS sebelumnya)
        if (returnsTable) {
            returnsTable.addEventListener('click', function(e) {
                const deleteButton = e.target.closest('.delete-btn'); // Pastikan Anda memiliki tombol dengan class 'delete-btn' dan data-id

                if (deleteButton) {
                    e.preventDefault();
                    const itemId = deleteButton.dataset.id;
                    console.log('Menghapus item pengembalian dengan ID:', itemId);

                    Swal.fire({
                        title: "Apakah Anda yakin?",
                        text: "Anda tidak akan bisa mengembalikan ini!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Ya, hapus saja!",
                        cancelButtonText: "Batal"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/pengembalian/${itemId}`, { // Sesuaikan URL API delete Anda
                                method: 'DELETE'
                            })
                            .then(response => {
                                if (!response.ok) {
                                    return response.json().then(err => Promise.reject(err));
                                }
                                return response.json();
                            })
                            .then(data => {
                                Swal.fire({
                                    title: "Dihapus!",
                                    text: data.message || `Data pengembalian dengan ID ${itemId} telah dihapus.`,
                                    icon: "success"
                                }).then(() => {
                                    window.location.reload();
                                });
                            })
                            .catch(error => {
                                console.error('Error saat menghapus data pengembalian:', error);
                                Swal.fire({
                                    title: "Gagal!",
                                    text: error.error || "Gagal menghapus data pengembalian.",
                                    icon: "error"
                                });
                            });
                        }
                    });
                }
            });
        }

        // Event listener untuk tombol "Pengembalian Barang" (aksi update status)
        if (btnPengembalianBarang) {
            btnPengembalianBarang.addEventListener('click', async function() {
                const checkedCheckboxes = document.querySelectorAll('#tabelPengembalian input[type="checkbox"]:checked');
                const idsToUpdate = Array.from(checkedCheckboxes).map(cb => cb.dataset.id);

                if (idsToUpdate.length === 0) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Peringatan',
                        text: 'Pilih setidaknya satu item untuk dikembalikan.'
                    });
                    return;
                }

                Swal.fire({
                    title: "Konfirmasi Pengembalian?",
                    text: `Anda akan mengubah status ${idsToUpdate.length} item menjadi 'Dikembalikan'.`,
                    icon: "info",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Ya, Kembalikan!",
                    cancelButtonText: "Batal"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/pengembalian/update-status', { // Endpoint POST untuk update status
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ idsToUpdate: idsToUpdate }) // Kirim array ID
                            });

                            if (!response.ok) {
                                const errorData = await response.json();
                                throw new Error(errorData.error || 'Gagal mengupdate status pengembalian.');
                            }

                            const data = await response.json();
                            Swal.fire({
                                title: "Berhasil!",
                                text: data.message,
                                icon: "success"
                            }).then(() => {
                                window.location.reload(); // Reload halaman untuk melihat perubahan status
                            });

                        } catch (error) {
                            console.error('Error saat mengupdate status pengembalian:', error);
                            Swal.fire({
                                title: "Gagal!",
                                text: error.message || "Terjadi kesalahan saat mengupdate status pengembalian.",
                                icon: "error"
                            });
                        }
                    }
                });
            });
        }

        // Handle notifikasi SweetAlert dari URL query params (misal setelah redirect dari controller)
        const urlParams = new URLSearchParams(window.location.search);
        const status = urlParams.get('status');
        const message = urlParams.get('message');

        if (status && message) {
            if (status === 'success') {
                Swal.fire({
                    title: "Berhasil!",
                    text: message,
                    icon: "success",
                    timer: 3000,
                    timerProgressBar: true
                });
            } else if (status === 'error') {
                Swal.fire({
                    title: "Gagal!",
                    text: message,
                    icon: "error",
                });
            }
            // Hapus parameter dari URL agar notifikasi tidak muncul lagi saat refresh manual
            history.replaceState({}, document.title, window.location.pathname);
        }
    });
</script>

<%- include('./partials/closeAside.ejs') %>