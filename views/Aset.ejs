<%- include('./partials/layoutStart.ejs') %> <%- include('./partials/aside.ejs')
%>

<div class="flex-1 bg-gray-100 p-6">
  <div class="p-1 mb-4 flex justify-between items-center">
    <div class="relative flex items-center w-full max-w-md">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-5 h-5 text-gray-400 absolute left-3"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
        />
      </svg>
      <input
        type="text"
        id="search"
        name="search"
        class="block w-full px-4 py-2 pl-10 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500"
        placeholder="Cari"
        autocomplete="off"
      />
    </div>

    <div class="flex items-center space-x-4">
      <div>
        <img src="icons/bell.png" alt="Notification Bell" class="w-6 h-6" />
      </div>
      <div
        class="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="w-6 h-6 text-gray-600"
        >
          <path
            fill-rule="evenodd"
            d="M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z"
            clip-rule="evenodd"
          />
        </svg>
      </div>
    </div>
  </div>

  <%- include('./partials/ringkasanAset.ejs') %>

  <div class="bg-white rounded-md shadow-md p-6">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-xl font-semibold text-gray-800">Aset</h2>
      <div class="flex space-x-2">
        <button
          class="flex items-center bg-[#0D1F4B] text-white font-medium py-2 px-4 rounded-lg shadow-sm"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            class="w-5 h-5 mr-2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 4.5v15m7.5-7.5h-15"
            />
          </svg>
          Tambah Barang
        </button>
        <button
          class="flex items-center bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-4 rounded-lg shadow-sm"
        >
          Print
          <img src="icons/print.png" alt="" class="ml-2" />
        </button>
      </div>
    </div>

    <div class="overflow-x-auto rounded-lg border border-gray-200">
      <table class="min-w-full divide-y divide-gray-200" id="assetsTable">
        <thead class="bg-gray-50">
          <tr>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Kode Barang
            </th>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Nama
            </th>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Kuantitas
            </th>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Tanggal Masuk
            </th>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Kondisi
            </th>
            <th
              scope="col"
              class="px-6 py-3 text-left text-sm font-medium text-gray-500"
            >
              Aksi
            </th>
          </tr>
        </thead>
        <tbody
          class="bg-white divide-y divide-gray-200"
          id="assetsTableBody"
        ></tbody>
      </table>
    </div>

    <div class="flex justify-between items-center mt-6">
      <button
        id="prevPageBtn"
        class="bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-4 rounded-lg shadow-sm"
      >
        Sebelumnya
      </button>
      <span id="pageInfo" class="text-gray-600 text-sm">Page 1 of 10</span>
      <button
        id="nextPageBtn"
        class="bg-[#0D1F4B] hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg shadow-sm"
      >
        Berikutnya
      </button>
    </div>
  </div>
</div>

<script>
      // const allAssets = [
      //     { kode: 'LSD.I', nama: 'Meja', kuantitas: '43 buah', tanggal: '11/12/22', kondisi: 'Baik' },
      //     { kode: 'LSD.II', nama: 'Kursi', kuantitas: '22 Packets', tanggal: '11/12/22', kondisi: 'Rusak' },
      //     { kode: 'LSD.III', nama: 'Monitor', kuantitas: '36 Packets', tanggal: '2/12/22', kondisi: 'Baik' },
      //     { kode: 'Bourn Vita', nama: '₹502', kuantitas: '14 Packets', tanggal: '4/11/22', kondisi: 'Rusak' },
      //     { kode: 'Harpic', nama: '₹605', kuantitas: '10 Packets', tanggal: '10/10/22', kondisi: 'Baik' },
      //     { kode: 'Coca cola', nama: '₹205', kuantitas: '41 Packets', tanggal: '1/9/22', kondisi: 'Baik' },
      //     { kode: 'Scotch Brite', nama: '₹359', kuantitas: '43 Packets', tanggal: '2/9/22', kondisi: 'Baik' },
      //     { kode: 'ITEM.008', nama: 'Keyboard', kuantitas: '15 buah', tanggal: '01/01/23', kondisi: 'Baik' },
      //     { kode: 'ITEM.009', nama: 'Mouse', kuantitas: '20 buah', tanggal: '02/01/23', kondisi: 'Rusak' },
      //     { kode: 'ITEM.010', nama: 'Printer', kuantitas: '5 buah', tanggal: '03/01/23', kondisi: 'Baik' },
      //     { kode: 'ITEM.011', nama: 'Proyektor', kuantitas: '3 buah', tanggal: '04/01/23', kondisi: 'Baik' },
      //     { kode: 'ITEM.012', nama: 'Speaker', kuantitas: '10 buah', tanggal: '05/01/23', kondisi: 'Rusak' },
      //     { kode: 'ITEM.013', nama: 'Whiteboard', kuantitas: '2 buah', tanggal: '06/01/23', kondisi: 'Baik' },
      //     { kode: 'ITEM.014', nama: 'AC', kuantitas: '7 buah', tanggal: '07/01/23', kondisi: 'Baik' },
      //     { kode: 'ITEM.015', nama: 'CCTV', kuantitas: '12 buah', tanggal: '08/01/23', kondisi: 'Rusak' },
      // ];

      // Di Aset.ejs
  const allAsset = <%- JSON.stringify(aset) %>; 

    //   const allAsset = allAset.map(asset => ({
    //       kode_barang: asset.kode_barang,
    //       nama_barang: asset.nama_barang,
    //       kuantitas: asset.kuantitas,
    //       tanggal: asset.tanggal_masuk,
    //       kondisi: asset.kondisi
    //   }));

      let currentPage = 1;
      const itemsPerPage = 5;

      const assetsTableBody = document.getElementById('assetsTableBody');
      const prevPageBtn = document.getElementById('prevPageBtn');
      const nextPageBtn = document.getElementById('nextPageBtn');
      const pageInfoSpan = document.getElementById('pageInfo');

      function renderTable(page) {
          const startIndex = (page - 1) * itemsPerPage;
          const endIndex = startIndex + itemsPerPage;
          const itemsToDisplay = allAssets.slice(startIndex, endIndex);

          assetsTableBody.innerHTML = '';

          itemsToDisplay.forEach(asset => {
              const row = document.createElement('tr');
              row.innerHTML = `
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">${asset.kode}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">${asset.nama}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">${asset.kuantitas}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">${asset.tanggal}</td>
                  <td class="px-6 py-4 whitespace-nowrap">
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${asset.kondisi === 'Baik' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                          ${asset.kondisi}
                      </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium flex">
                      <a href="#" class="text-blue-600 hover:text-blue-900 mr-3">
                          <img src="icons/detail.png" alt="Icon Detail">
                      </a>
                      <a href="/updatebarang/:id" class="text-green-600 hover:text-green-900 mr-3">
                          <img src="icons/edit.png" alt="Icon Edit">
                      </a>
                      <a href="#" class="text-red-600 hover:text-red-900 delete-btn" data-id="${asset.kode}">
                          <img src="icons/hapus.png" alt="Icon Hapus">
                      </a>
                  </td>
              `;
              assetsTableBody.appendChild(row);
          });

          const totalPages = Math.ceil(allAssets.length / itemsPerPage);
          pageInfoSpan.textContent = `Page ${page} of ${totalPages}`;

          prevPageBtn.disabled = (page === 1);
          nextPageBtn.disabled = (page === totalPages);

          if (prevPageBtn.disabled) {
              prevPageBtn.classList.add('opacity-50', 'cursor-not-allowed');
              prevPageBtn.classList.remove('hover:bg-gray-300');
          } else {
              prevPageBtn.classList.remove('opacity-50', 'cursor-not-allowed');
              prevPageBtn.classList.add('hover:bg-gray-300');
          }

          if (nextPageBtn.disabled) {
              nextPageBtn.classList.add('opacity-50', 'cursor-not-allowed');
              nextPageBtn.classList.remove('hover:bg-blue-700');
          } else {
              nextPageBtn.classList.remove('opacity-50', 'cursor-not-allowed');
              nextPageBtn.classList.add('hover:bg-blue-700');
          }
      }

      prevPageBtn.addEventListener('click', () => {
          if (currentPage > 1) {
              currentPage--;
              renderTable(currentPage);
          }
      });

      nextPageBtn.addEventListener('click', () => {
          const totalPages = Math.ceil(allAssets.length / itemsPerPage);
          if (currentPage < totalPages) {
              currentPage++;
              renderTable(currentPage);
          }
      });

      document.addEventListener('DOMContentLoaded', function() {
          const assetsTable = document.getElementById('assetsTable');

          if (assetsTable) {
              assetsTable.addEventListener('click', function(e) {
                  const deleteButton = e.target.closest('.delete-btn');

                  if (deleteButton) {
                      e.preventDefault();
                      const itemId = deleteButton.dataset.id;
                      console.log('Menghapus item dengan ID:', itemId);

                      Swal.fire({
                          title: "Apakah Anda yakin?",
                          text: "Anda tidak akan bisa mengembalikan ini!",
                          icon: "warning",
                          showCancelButton: true,
                          confirmButtonColor: "#3085d6",
                          cancelButtonColor: "#d33",
                          confirmButtonText: "Ya, hapus saja!",
                          cancelButtonText: "Batal"
                      }).then((result) => {
                          if (result.isConfirmed) {

                              const indexToDelete = allAssets.findIndex(asset => asset.kode === itemId);
                              if (indexToDelete > -1) {
                                  allAssets.splice(indexToDelete, 1); // Hapus item dari array
                              }

                              Swal.fire({
                                  title: "Dihapus!",
                                  text: `Item ${itemId} telah dihapus.`,
                                  icon: "success"
                              }).then(() => {

                                  const totalPages = Math.ceil(allAssets.length / itemsPerPage);
                                  if (currentPage > totalPages && currentPage > 1) {
                                      currentPage--;
                                  }
                                  renderTable(currentPage);
                              });
                          }
                      });
                  }
              });
          }

          renderTable(currentPage);
      });
</script>

<%- include('./partials/closeAside.ejs') %>
